import socket
import sys

# Configurações do servidor
HOST = '127.0.0.1'  
PORT = 15000
TAMANHO_BUFFER = 1024
MAX_NUMEROS = 20

def calcular(operacao, numeros_str):
    try:
        # Converte a string de números em uma lista de números flutuantes
        numeros = [float(n) for n in numeros_str.split()]
        
        if not (1 <= len(numeros) <= MAX_NUMEROS):
            return f"ERRO: A quantidade de números deve ser entre 1 e {MAX_NUMEROS}. Recebido: {len(numeros)}"

        if operacao == 'soma':
            resultado = sum(numeros)
        elif operacao == 'subtracao':
            if not numeros: return "ERRO: Subtração requer pelo menos um número."
            soma = sum(numeros) - numeros[0]
            resultado = numeros[0] - soma
        elif operacao == 'multiplicacao':
            resultado = 1.0
            for num in numeros:
                resultado = resultado * num
        elif operacao == 'divisao':
            if len(numeros) < 2:
                return "ERRO: Divisão requer pelo menos dois números (dividendo e divisor)."
            
            # O primeiro é o dividendo, os seguintes são divisores
            resultado = numeros[0]
            for divisor in numeros[1:]:
                if divisor == 0:
                    return "ERRO: Divisão por zero não permitida."
                resultado = resultado / divisor
        else:
            return "ERRO: Operação inválida."

        return f"RESULTADO: {resultado}"

    except ValueError:
        return "ERRO: Entrada inválida. Certifique-se de que todos são números válidos separados por espaço."
    except Exception as e:
        return f"ERRO INTERNO: {e}"

def iniciar_servidor():
    """
    Configura e inicia o servidor TCP.
    """
    # AF_INET é para IPv4, SOCK_STREAM é para TCP
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        try:
            s.bind((HOST, PORT))
        except OSError as e:
            print(f"Erro ao ligar na porta {PORT}: {e}")
            sys.exit(1)

        s.listen() # Fica escutando por conexões
        print(f"Servidor de Calculadora iniciado em {HOST}:{PORT}. Aguardando conexões...")

        while True:
            # Aceita uma nova conexão
            conn, addr = s.accept()
            with conn:
                print(f"Conectado por {addr}")
                
                try:
                    # Recebe a mensagem do cliente
                    dados = conn.recv(TAMANHO_BUFFER)
                    if not dados:
                        continue

                    mensagem = dados.decode('utf-8').strip()
                    print(f"Requisição recebida: {mensagem}")

                    # O formato esperado é: <operacao> <numero1> <numero2> ...
                    partes = mensagem.split(' ', 1)
                    if len(partes) < 2:
                        resposta = "ERRO: Formato de requisição inválido. Use: <operacao> <numeros separados por espaco>."
                    else:
                        operacao = partes[0].lower()
                        numeros_str = partes[1].strip()
                        resposta = calcular(operacao, numeros_str)

                    # Envia a resposta de volta ao cliente
                    conn.sendall(resposta.encode('utf-8'))
                    print(f"Resposta enviada: {resposta}")

                except ConnectionResetError:
                    print(f"Conexão com {addr} foi resetada pelo cliente.")
                except Exception as e:
                    print(f"Erro no manuseio da conexão: {e}")

if __name__ == '__main__':
    iniciar_servidor()
