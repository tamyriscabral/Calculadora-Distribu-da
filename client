import socket
import sys

# Configurações do servidor
HOST = '127.0.0.1'  # Deve ser o mesmo IP onde o servidor está rodando
PORT = 15000
TAMANHO_BUFFER = 1024
MAX_NUMEROS = 20

def exibir_menu():
    """
    Exibe o menu de opções e captura a escolha do usuário.
    """
    print("\n--- Calculadora Distribuída ---")
    print("1. Somar")
    print("2. Subtrair")
    print("3. Multiplicar")
    print("4. Dividir")
    print("5. Sair")
    
    escolha = input("Escolha uma operação (1-5): ").strip()
    return escolha

def obter_dados_operacao(escolha):
    """
    Solicita os números ao usuário e formata a mensagem para o servidor.
    """
    if escolha == '1':
        operacao_nome = "soma"
    elif escolha == '2':
        operacao_nome = "subtracao"
    elif escolha == '3':
        operacao_nome = "multiplicacao"
    elif escolha == '4':
        operacao_nome = "divisao"
    else:
        return None, None
    
    # Exemplo de entrada esperada
    print(f"\nOperação: {operacao_nome.upper()}. Números separados por espaço (máx. {MAX_NUMEROS}).")
    if escolha == '2':
        print("Subtração: O primeiro número será subtraído pela soma dos restantes.")
    elif escolha == '4':
        print("Divisão: O primeiro número será dividido pelos divisores seguintes.")

    # Captura a string de números
    numeros_str = input("Digite os números: ").strip()
    
    # Validação básica de quantidade (mais detalhes no servidor)
    if not numeros_str:
        print("Nenhum número foi inserido. Tente novamente.")
        return None, None

    # Verifica o limite de números
    if len(numeros_str.split()) > MAX_NUMEROS:
        print(f"Você excedeu o limite de {MAX_NUMEROS} números.")
        return None, None

    # Formato da mensagem: <operacao> <numero1> <numero2> ...
    mensagem = f"{operacao_nome} {numeros_str}"
    return mensagem, operacao_nome

def iniciar_cliente():
    """
    Inicia o loop principal do cliente.
    """
    while True:
        escolha = exibir_menu()

        if escolha == '5':
            print("Encerrando o cliente. Até mais!")
            break
        
        if escolha not in ['1', '2', '3', '4']:
            print("Opção inválida. Por favor, escolha um número de 1 a 5.")
            continue

        mensagem_servidor, operacao = obter_dados_operacao(escolha)
        
        if mensagem_servidor is None:
            continue
        
        # Cria o socket e tenta conectar
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            try:
                s.connect((HOST, PORT))
                
                # Envia a mensagem para o servidor
                print(f"Enviando requisição de {operacao}...")
                s.sendall(mensagem_servidor.encode('utf-8'))
                
                # Recebe a resposta
                dados = s.recv(TAMANHO_BUFFER)
                resposta = dados.decode('utf-8')
                
                print(f"\n--- Resposta do Servidor ---")
                print(resposta)
                print("---------------------------\n")

            except ConnectionRefusedError:
                print(f"ERRO: Não foi possível conectar ao servidor em {HOST}:{PORT}.")
                print("Certifique-se de que o servidor está em execução.")
            except Exception as e:
                print(f"Ocorreu um erro: {e}")

if __name__ == '__main__':
    iniciar_cliente()
